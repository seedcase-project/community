---
title: "BAsic Python Course at Teknologisk Institut"
description: "Some thoughts and experiences I had about the Basic Python Course at Teknologisk Institut in 2024."
author: "Kristiane Beicher"
date: "2024-09-20"
categories:
  - learning
  - experiences
  - programming
---

Some time ago I attended the [Basic Python Course](https://www.teknologisk.dk/kurser/grundlaeggende-python-programmering/k91466) at Teknologisk Institut in Aarhus, Denmark. While writing the blog post about the Advanced Python Course, I realized that I never wrote a blog post about the Basic Python Course. So, here it is!

## Course Overview

The main points the course covered were the following:

Data Types and Control Flow tools

- including int, float, string, and lists
- if, for, while, and functions

Data Structures and Modules

- lists, tuples, dictionaries, and sets
- modules and importing from packages

Input and Output

- formatting the output
- reading and writing to files

Errors and Exceptions

- try, except, and finally

Classes and Objects

- defining classes and objects
- scope, inheritance, and polymorphism

Standard Library

- os, sys, and datetime
- wildcards and regular expressions


## Experiences

I had some knowledge of Python before attending the course, but I wanted to get a better understanding of the basics. The course was a good starting point for me, as I felt like a lot of the knowledge that was rattling around in my head got slotted into a more sensible structure. There were a large number of smaller exercises, which helped me to get a better understanding of the concepts that were being taught.

The structure in general was introducing a new concept, giving us a bit of time to solve the exercises, and then seeing the solution on screen which the instructor had written while waiting for us to finish. This was a good way to learn, as it gave me the opportunity to try and solve the exercises myself, but also to see how the instructor would solve them. It also meant that you could just look up to see the solution if you got stuck, which helped a lot with cutting down on time spent on tangents that wouldn't lead anywhere.

The instructor was very enthusiastic and quite knowledgable, he has worked with python for many years, and his main job is as a consultant programmer, not a teacher. This meant that he had a lot of real-world experience to draw on, and he was able to give us a lot of good advice on how to structure our code, and how to solve problems in a pythonic way.

## Key Takeaways

I think the course came at precisely the right time for me to get the most out of it. I had some knowledge of python, and it really helped me to get my existing knowledge structured in a more sensible way, as well as giving me some slightly more advanced concepts to build on. I feel like I have a better understanding of how python is structured and how good code should be written. I also feel like I have a better understanding of how to solve problems in a pythonic way (and I know what pythonic means now!).
